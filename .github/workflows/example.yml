name: Deploy website
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, edited]
    branches: # these filters are for the branch that is targeted for a pull request
      - main
      - dev
      - 'dev-*' # dev-new dev-this-is-new
      - 'feat/**' # feat/new feate/new/button
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies, lint and testing
        id: run-tests
        run: |
          npm ci
          npm run lint
          npm run test
      - name: upload test reports
        if: failure() && steps.run-tests.outcome == 'failure' #${{  }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: '${{ github.workspace }}.json'
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: build
        run: |
          npm ci
          npm run build
      - name: Publish JS file Name
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files #the same name as upload artifacts
      - name: output contents
        run: ls
      - name: output file name
        run: echo "${{needs.build.outputs.script-file}}"
      - name: Deploy
        run: echo "Deploying..."
